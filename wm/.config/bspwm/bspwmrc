#!/bin/bash

# Settings
bspc config border_width                  1
bspc config normal_border_color           "#313244"
bspc config focused_border_color          "#fab387"
bspc config window_gap                    20
bspc config top_padding                   10
# bspc config single_monocle                true
# bspc config borderless_monocle            true
# bspc config gapless_monocle               true
bspc config split_ratio    0.62
bspc config focus_follows_pointer true
bspc config pointer_modifier      mod1

bspc config automatic_scheme      spiral

# set up both monitors
# NOTE: this must be done before polybar
xrandr --output DP-5 --primary --mode 1920x1080 --rotate normal --output DP-6 --mode 1920x1080 --rotate normal --left-of DP-5
# Per monitor workspaces
## Use "bspc query -M to get the ID of the monitor"
## The assumption for this machine is that there will always be two monitors connected:
#if [ "$(bspc query -M | wc -l)" -eq "2"]; then
#	bspc monitor $(bspc query -M | sed -n 2p) -d 1 2 3 4
#	bspc monitor $(bspc query -M | sed -n 1p) -d 5 6 7 8
#fi
bspc monitor DP-6 -d 1 2 3 4
bspc monitor DP-5 -d 5 6 7 8

# Polybar(s)
## kill any existing instances
killall -q polybar
## wait until the processes have been shut down
while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done
## lauch polybar for both monitors
#polybar rechts &
#polybar links &
#for m in $(polybar --list-monitors | cut -d":" -f1); do
#	MONITOR=$m polybar --reload rechts &
#done
MONITOR=DP-5 polybar --reload rechts &
MONITOR=DP-6 polybar --reload links &

xsetroot -cursor_name left_ptr
sxhkd &





